generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model group_members {
  group_id   Int
  user_id    Int
  created_by Int?
  created_at DateTime @default(now())

  @@id([group_id, user_id])
}

model group_roles {
  group_id   Int
  role_id    Int
  created_by Int?
  created_at DateTime @default(now())

  @@id([group_id, role_id])
}

model groups {
  group_id          Int      @id @default(autoincrement())
  group_name        String   @unique(map: "groups_group_name_unique")
  group_description String?
  email             String?
  created_by        Int?
  created_at        DateTime @default(now())
  updated_by        Int?
  updated_at        DateTime @updatedAt

}

model permissions {
  permission_id          Int      @id @default(autoincrement())
  permission_name        String   @unique(map: "permissions_permission_name_unique")
  permission_description String
  parent_id              Int?
  created_by             Int?
  created_at             DateTime @default(now())
  updated_by             Int?
  updated_at             DateTime @updatedAt
}

model role_permissions {
  role_id       Int
  permission_id Int

  @@id([role_id, permission_id])
}

model roles {
  role_id          Int      @id @default(autoincrement())
  role_name        String   @unique(map: "roles_role_name_unique")
  role_description String
  created_by       Int?
  created_at       DateTime @default(now())
  updated_by       Int?
  updated_at       DateTime @updatedAt
}

model user_roles {
  user_id Int
  role_id Int

  @@id([user_id, role_id])
}

model users {
  user_id    Int      @id @default(autoincrement())
  user_name  String   @unique(map: "users_user_name_unique")
  full_name  String
  password   String
  email      String
  created_by Int?
  created_at DateTime @default(now())
  updated_by Int?
  updated_at DateTime @updatedAt
}

// model statuses {
//   id                 Int    @id @default(autoincrement())
//   status_name        String @unique(map: "statuses_status_name_unique")
//   status_description String
// }

// model topic_groups {
//   topic_id Int
//   group_id Int

//   @@id([topic_id, group_id])
// }

// model topic_users {
//   topic_id Int
//   user_id  Int

//   @@id([topic_id, user_id])
// }

// model topics {
//   id                          Int     @id @default(autoincrement())
//   topic_name                  String  @unique(map: "topics_topic_name_unique")
//   topic_description           String
//   topic_description_formatted String
//   topic_prefix                String
//   email                       String?
// }
